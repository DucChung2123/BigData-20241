x-airflow-common: &airflow-common
  build:
    context: ./airflow/docker
    dockerfile: Dockerfile
  env_file:
    - ./airflow/airflow.env
  volumes:
    - airflow-logs:/opt/airflow/logs
    - ./airflow/dags:/opt/airflow/dags
    - ./spark/jars:/opt/spark/jars
    - ./spark/jobs:/opt/spark/app
  depends_on:
    - postgres
  networks:
    - airflow

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: crime
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data  
    networks:
      - airflow

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8090:8080"
    depends_on:
      - airflow-scheduler

  # Airflow Scheduler
  airflow-scheduler:
      <<: *airflow-common
      container_name: airflow-scheduler
      command: bash -c "airflow db migrate && airflow users create --username admin --firstname Yusuf --lastname Ganiyu --role Admin --email airscholar@gmail.com --password admin && airflow scheduler"

  # Spark Master
  spark-master:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARL_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./spark/jars:/opt/spark/jars
      - ./spark/jobs:/opt/spark/app
    depends_on:
      - hdfs-namenode
      - postgres
    networks:
      - airflow

  # Spark Worker 1
  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    volumes:
      - ./spark/jars:/opt/spark/jars
      - ./spark/jobs:/opt/spark/app
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - airflow

  # Spark Worker 2
  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    volumes:
      - ./spark/jars:/opt/spark/jars
      - ./spark/jobs:/opt/spark/app
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - airflow

  # Spark Worker 3
  spark-worker-3:
    image: bitnami/spark:latest
    container_name: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    volumes:
      - ./spark/jars:/opt/spark/jars
      - ./spark/jobs:/opt/spark/app
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    networks:
      - airflow

  # HDFS Namenode
  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-namenode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:9000
      - HDFS_CONF_dfs_replication=3
      - HDFS_CONF_dfs_webhdfs_enabled=true
    volumes:
      - ./hdfs/namenode:/hadoop/dfs/name
    ports:
      - "9870:9870"
      - "9000:9000"
    networks:
      - airflow

  # HDFS Datanodes
  hdfs-datanode-1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode-1
    depends_on:
      - hdfs-namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:9000
    volumes:
      - ./hdfs/datanode-1:/hadoop/dfs/data
    ports:
      - "50075:50075"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'
    networks:
      - airflow

  hdfs-datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode-2
    depends_on:
      - hdfs-namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:9000
    volumes:
      - ./hdfs/datanode-2:/hadoop/dfs/data
    ports:
      - "50076:50075"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'
    networks:
      - airflow

  hdfs-datanode-3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode-3
    depends_on:
      - hdfs-namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:9000
    volumes:
      - ./hdfs/datanode-3:/hadoop/dfs/data
    ports:
      - "50077:50075"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'
    networks:
      - airflow

  # Data Ingestion Service
  data_ingestion_service:
    build:
      context: ./data_ingestion_service
      dockerfile: Dockerfile
    container_name: data_ingestion_service
    environment:
      - HDFS_URL=http://hdfs-namenode:9870
      - HDFS_USER=root
    depends_on:
      - hdfs-namenode
    ports:
      - "8000:8000"
    volumes:
      - ./data_ingestion_service/src/data:/app/src/data  
    networks:
      - airflow
volumes:
  postgres-data:
  airflow-logs:
  airflow-dags:
  airflow-plugins:
  hdfs-namenode:
  hdfs-datanode-1:
  hdfs-datanode-2:
  hdfs-datanode-3:

networks:
  airflow:
    driver: bridge